# This workflow customizes our github-pages deployment.
# See https://github.com/actions/deploy-pages/issues/20
# See also https://github.com/actions/deploy-pages/issues/9
# We disabled the default deployment like this:
# 1. Create a throw-away branch `github-pages-no-op` (name is arbitrary).
# 2. Settings | Pages | Source | Branch = github-pages-no-op.
# 3. Settings | Environments | github-pages | Deployment branches = Protected branches.
# Customized deployments are currently in pre-beta.

permissions:
  contents: read
  pages: write
  id-token: write

name: Build and Deploy

on:
  push:
    branches: [trunk]

env:
  # TODO Make the site source dir a sibling of the costing-app source dir.
  # E.g.,
  # ./
  #   fernwood-site/
  #   fernwood-costing/
  # Why? This might make the repository easier to navigate for maintenance.
  SITE_SOURCE_DIR: ${{ github.workspace }}
  SITE_DESTINATION_DIR: ${{ github.workspace }}/docs/
  COSTING_APP_SOURCE_DIR: ${{ github.workspace }}/apps/fernwood-costing/
  COSTING_APP_DESTINATION_DIR: ${{ github.workspace}}/docs/costing/
  COSTING_APP_PUBLIC_PATH: /costing/

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - name: Build Site
        run: |
          npm ci
          npm run build -- --out-dir $SITE_DESTINATION_DIR
        working-directory: ${{ env.SITE_SOURCE_DIR }}
      - name: Build Costing App
        run: |
          npm ci
          npm run build:production
        working-directory: ${{ env.COSTING_APP_SOURCE_DIR }}
      - name: Dump Build Results
        run: tree -I "node_modules"
        working-directory: ${{ env.SITE_SOURCE_DIR }}
      - name: Archive build output
        run: tar --dereference --hard-dereference --directory docs/ -cvf artifact.tar .
      - name: Upload Artifact
        uses: actions/upload-artifact@main
        with:
          name: github-pages
          path: ./artifact.tar
          if-no-files-found: warn
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1-beta
