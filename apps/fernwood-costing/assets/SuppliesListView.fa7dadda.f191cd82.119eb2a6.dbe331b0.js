import{E as u,B as d,D as c,K as h,V as r,N as i,H as f,z as P,s as m,i as v,R as T}from"./index.935dcb02.js";import{F as g}from"./AgGridComponent.vue_vue_type_style_index_0_lang.fa2b8661.39d83dec.a6d67679.57858042.js";import{T as n,U as o}from"./formatMoney.0cf77808.c83e9a63.80c3045c.ce30408e.js";var C=new Intl.NumberFormat("en-CA",{style:"percent"});const S=a=>isNaN(a)?"-":C.format(a),U=u({__name:"AgCheckboxEditor",props:{params:null},setup(a,{expose:p}){const s=d(a.params.value);return p({getValue:()=>s.value}),(l,t)=>c((r(),i("input",{type:"checkbox","onUpdate:modelValue":t[0]||(t[0]=e=>s.value=e)},null,512)),[[h,s.value]])}}),x=u({__name:"AgPercentEditor",props:{params:null},setup(a,{expose:p}){const s=d(a.params.value);return p({getValue:()=>s.value/100}),(l,t)=>c((r(),i("input",{type:"number","onUpdate:modelValue":t[0]||(t[0]=e=>s.value=e)},null,512)),[[f,s.value]])}}),N=.06,D=a=>{const p=a.hasPST?a.purchasePriceBeforeTax*(1+N):a.purchasePriceBeforeTax,s=a.purchaseQuantity*a.percentWaste,l=a.purchaseQuantity-s,t=p/l;return console.log("calculatePerUnitSupplyCost",JSON.stringify({hasPST:a.hasPST,purchasePriceBeforeTax:a.purchasePriceBeforeTax,costAfterPST:p,purchaseQuantity:a.purchaseQuantity,percentWaste:a.percentWaste,wasteQuantity:s,unwastedQuantity:l},void 0,2)),t},_=u({__name:"AgGridSuppliesComponent",props:{suppliesList:null},emits:["supplyUpdated","supplyDeleted"],setup(a,{emit:p}){const s=e=>p("supplyUpdated",e),l=e=>p("supplyDeleted",e),t=[{field:"supplyType",cellEditor:n,cellEditorParams:{options:["ingredient","packaging"].map(e=>({value:e,label:e}))}},{field:"supplyUnits",cellEditor:n,cellEditorParams:{options:["gram","litre","ounce","item"].map(e=>({value:e,label:e}))}},{field:"purchasePriceBeforeTax",headerName:"Purchase Price before Tax",valueFormatter:e=>o(e.value)},{field:"percentWaste",cellEditor:x,valueFormatter:e=>S(e.value)},{field:"hasPST",cellEditor:U},{field:"unitCost",headerName:"Unit Cost (Calculated)",editable:!1,valueGetter:({data:e})=>D(e),valueFormatter:e=>o(e.value)}];return(e,y)=>(r(),P(g,{gridData:a.suppliesList,gridColumns:["supplyName","supplyType","supplyUnits","purchaseQuantity","purchasePriceBeforeTax","percentWaste","hasPST","unitCost"],gridColumnDefs:t,onGridDataUpdate:s,onGridRowDelete:l},null,8,["gridData"]))}}),E=m("h1",null,"Supplies",-1),Q=u({__name:"SuppliesListView",props:{suppliesList:null,sendCommand:null},setup(a){const p=a,s=e=>p.sendCommand({type:"update_supply",payload:e}),l=e=>p.sendCommand({type:"delete_supply",payload:e}),t=()=>{p.sendCommand({type:"create_supply",payload:{uniqueId:crypto.randomUUID(),supplyUnits:"",supplyName:`New Supply ${p.suppliesList.items.length}`,supplyType:"ingredient",percentWaste:0,hasPST:!1,purchaseQuantity:0,purchasePriceBeforeTax:0}})};return(e,y)=>(r(),i(T,null,[E,m("button",{onClick:t},"New Supply"),v(_,{suppliesList:a.suppliesList,onSupplyUpdated:s,onSupplyDeleted:l},null,8,["suppliesList"])],64))}});export{Q as default};
