import{d as p,a as m,f,s as h,o,b as c,x as _,c as P,e as y,j as v,F as g}from"./index.2a660d36.js";import{_ as S}from"./AgGridComponent.vue_vue_type_style_index_0_lang.fa2b8661.js";import{A as i,f as d}from"./formatMoney.0cf77808.js";var C=new Intl.NumberFormat("en-CA",{style:"percent"});const T=t=>isNaN(t)?"-":C.format(t),x=p({__name:"AgCheckboxEditor",props:{params:null},setup(t,{expose:a}){const s=m(t.params.value);return a({getValue:()=>s.value}),(e,n)=>f((o(),c("input",{type:"checkbox","onUpdate:modelValue":n[0]||(n[0]=u=>s.value=u)},null,512)),[[h,s.value]])}}),U=p({__name:"AgPercentEditor",props:{params:null},setup(t,{expose:a}){const s=m(t.params.value);return a({getValue:()=>s.value/100}),(e,n)=>f((o(),c("input",{type:"number","onUpdate:modelValue":n[0]||(n[0]=u=>s.value=u)},null,512)),[[_,s.value]])}}),N=.06,D=t=>{const a=t.hasPST?t.purchasePriceBeforeTax*(1+N):t.purchasePriceBeforeTax,r=t.purchaseQuantity*t.percentWaste,s=t.purchaseQuantity-r,l=a/s;return console.log("calculatePerUnitSupplyCost",JSON.stringify({hasPST:t.hasPST,purchasePriceBeforeTax:t.purchasePriceBeforeTax,costAfterPST:a,purchaseQuantity:t.purchaseQuantity,percentWaste:t.percentWaste,wasteQuantity:r,unwastedQuantity:s},void 0,2)),l},b=p({__name:"AgGridSuppliesComponent",props:{suppliesList:null},emits:["supplyUpdated","supplyDeleted"],setup(t,{emit:a}){const r=e=>a("supplyUpdated",e),s=e=>a("supplyDeleted",e),l=[{field:"supplyType",cellEditor:i,cellEditorParams:{options:["ingredient","packaging"].map(e=>({value:e,label:e}))}},{field:"supplyUnits",cellEditor:i,cellEditorParams:{options:["gram","litre","ounce","item"].map(e=>({value:e,label:e}))}},{field:"purchasePriceBeforeTax",headerName:"Purchase Price before Tax",valueFormatter:e=>d(e.value)},{field:"percentWaste",cellEditor:U,valueFormatter:e=>T(e.value)},{field:"hasPST",cellEditor:x},{field:"unitCost",headerName:"Unit Cost (Calculated)",editable:!1,valueGetter:({data:e})=>D(e),valueFormatter:e=>d(e.value)}];return(e,n)=>(o(),P(S,{gridData:t.suppliesList,gridColumns:["supplyName","supplyType","supplyUnits","purchaseQuantity","purchasePriceBeforeTax","percentWaste","hasPST","unitCost"],gridColumnDefs:l,onGridDataUpdate:r,onGridRowDelete:s},null,8,["gridData"]))}}),B=y("h1",null,"Supplies",-1),V=p({__name:"SuppliesListView",props:{suppliesList:null,sendCommand:null},setup(t){const a=t,r=e=>a.sendCommand({type:"update_supply",payload:e}),s=e=>a.sendCommand({type:"delete_supply",payload:e}),l=()=>{a.sendCommand({type:"create_supply",payload:{uniqueId:crypto.randomUUID(),supplyUnits:"",supplyName:`New Supply ${a.suppliesList.items.length}`,supplyType:"ingredient",percentWaste:0,hasPST:!1,purchaseQuantity:0,purchasePriceBeforeTax:0}})};return(e,n)=>(o(),c(g,null,[B,y("button",{onClick:l},"New Supply"),v(b,{suppliesList:t.suppliesList,onSupplyUpdated:r,onSupplyDeleted:s},null,8,["suppliesList"])],64))}});export{V as default};
