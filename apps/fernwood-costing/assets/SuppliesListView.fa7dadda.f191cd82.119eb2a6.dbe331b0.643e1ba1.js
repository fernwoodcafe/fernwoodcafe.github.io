import{P as u,K as d,H as c,X as h,D as r,G as i,J as f,Z as P,s as m,i as v,j as T}from"./index.7b6d1898.js";import{F as g}from"./AgGridComponent.vue_vue_type_style_index_0_lang.fa2b8661.39d83dec.a6d67679.57858042.68162d1f.js";import{D as n,E as o}from"./formatMoney.0cf77808.c83e9a63.80c3045c.ce30408e.25d20a91.js";var C=new Intl.NumberFormat("en-CA",{style:"percent"});const S=a=>isNaN(a)?"-":C.format(a),x=u({__name:"AgCheckboxEditor",props:{params:null},setup(a,{expose:t}){const s=d(a.params.value);return t({getValue:()=>s.value}),(l,p)=>c((r(),i("input",{type:"checkbox","onUpdate:modelValue":p[0]||(p[0]=e=>s.value=e)},null,512)),[[h,s.value]])}}),D=u({__name:"AgPercentEditor",props:{params:null},setup(a,{expose:t}){const s=d(a.params.value);return t({getValue:()=>s.value/100}),(l,p)=>c((r(),i("input",{type:"number","onUpdate:modelValue":p[0]||(p[0]=e=>s.value=e)},null,512)),[[f,s.value]])}}),U=.06,_=a=>{const t=a.hasPST?a.purchasePriceBeforeTax*(1+U):a.purchasePriceBeforeTax,s=a.purchaseQuantity*a.percentWaste,l=a.purchaseQuantity-s,p=t/l;return console.log("calculatePerUnitSupplyCost",JSON.stringify({hasPST:a.hasPST,purchasePriceBeforeTax:a.purchasePriceBeforeTax,costAfterPST:t,purchaseQuantity:a.purchaseQuantity,percentWaste:a.percentWaste,wasteQuantity:s,unwastedQuantity:l},void 0,2)),p},E=u({__name:"AgGridSuppliesComponent",props:{suppliesList:null},emits:["supplyUpdated","supplyDeleted"],setup(a,{emit:t}){const s=e=>t("supplyUpdated",e),l=e=>t("supplyDeleted",e),p=[{field:"supplyType",cellEditor:n,cellEditorParams:{options:["ingredient","packaging"].map(e=>({value:e,label:e}))}},{field:"supplyUnits",cellEditor:n,cellEditorParams:{options:["gram","litre","ounce","item"].map(e=>({value:e,label:e}))}},{field:"purchasePriceBeforeTax",headerName:"Purchase Price before Tax",valueFormatter:e=>o(e.value)},{field:"percentWaste",cellEditor:D,valueFormatter:e=>S(e.value)},{field:"hasPST",cellEditor:x},{field:"unitCost",headerName:"Unit Cost (Calculated)",editable:!1,valueGetter:({data:e})=>_(e),valueFormatter:e=>o(e.value)}];return(e,y)=>(r(),P(g,{gridData:a.suppliesList,gridColumns:["supplyName","supplyType","supplyUnits","purchaseQuantity","purchasePriceBeforeTax","percentWaste","hasPST","unitCost"],gridColumnDefs:p,onGridDataUpdate:s,onGridRowDelete:l},null,8,["gridData"]))}}),N=m("h1",null,"Supplies",-1),w=u({__name:"SuppliesListView",props:{suppliesList:null,sendCommand:null},setup(a){const t=a,s=e=>t.sendCommand({type:"update_supply",payload:e}),l=e=>t.sendCommand({type:"delete_supply",payload:e}),p=()=>{t.sendCommand({type:"create_supply",payload:{uniqueId:crypto.randomUUID(),supplyUnits:"",supplyName:`New Supply ${t.suppliesList.items.length}`,supplyType:"ingredient",percentWaste:0,hasPST:!1,purchaseQuantity:0,purchasePriceBeforeTax:0}})};return(e,y)=>(r(),i(T,null,[N,m("button",{onClick:p},"New Supply"),v(E,{suppliesList:a.suppliesList,onSupplyUpdated:s,onSupplyDeleted:l},null,8,["suppliesList"])],64))}});export{w as default};
